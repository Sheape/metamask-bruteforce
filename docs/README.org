#+OPTIONS: toc:nil
#+EXPORT_FILE_NAME: ../README.md
#+TITLE: README

* Metamask Bruteforce
This is my first project written in rust, so please if you have any issues feel
free to open them or if you have suggestions on how I can improve my code.

[[https://user-images.githubusercontent.com/86521166/260396429-eb877d79-82c3-4301-900d-cd99401fcde8.png]]

** Features
- *Low memory usage* - Only using about _20MB of RAM_, so you can run this without
  affecting your daily workflow.
- *Minimum CPU usage* - Only one of spike of CPU every second. Unlike other options
  where hashing will inevitably impact your CPU.
- *Realiable* - It uses an [[https://blockscan.com][online API]] to check the balance of the address instead
  of doing it offline where the user is required to install a very big database.
- *Blazingly fast* - It maximizes the performance while scanning all of the
  generated address and still maintaining a low memory usage using _asynchronous
 code_.
- *Binary-only*: Unlike other scripts where it is interpreted at runtime, since
  rust compiles a program to a binary, there is no need for you to install an
  interpreter or compiler.

** How it works?
This works by efficiently generating 12 words mnemonic and hashing it to an
ethereum address. 100 pairs are generated in a matter of ~50ms~ which is
extremely fast and only the network and API calls take much of the time.

It uses [[https://blockscan.com/][Blockscan]] APIs and its incredible ecosystem for each of the network as
they all have the same framework of API. Each API call process _20 addresses_ on
_15 networks_ concurrently being called in 5 threads for a total of 1500 responses
per second.

The goal of this project is to be able to run it without hitting the CPU and
memory too much (which both python and javascript suffered through when I tried
to write it from those languages) so I can run the program 24/7.

** Installation
:PROPERTIES:
:CUSTOM_ID: Installation
:END:
You can do any of the following below:
*** Install the Binary (recommended)
Grab the latest release from GitHub:
- Install the binary from [[https://github.com/Sheape/metamask-bruteforce][Release]]
*** Using cargo
- Run ~cargo install --git https://github.com/Sheape/metamask-bruteforce~ from
  your terminal
*** Compiling from source
Alternatively, you can clone the repo and build it manually from source:
#+begin_src bash
git clone https://github.com/Sheape/metamask-bruteforce.git
cd metamask-bruteforce
cargo build --release
mv .env.template .env
sudo cp ./target/release/metamask-bruteforce /usr/bin/metamask-bruteforce
#+end_src

** Usage
1. [[#Installation][Install the package]]
2. Rename ~.env.template~ to ~.env~
3. Create an account to each of the following sites:
   - [[https://bscscan.com/register][BscScan]]
   - [[https://etherscan.io/register][Etherscan]]
   - [[https://polygonscan.com/register][Polygon Scan]]
   - [[https://zkevm.polygonscan.com/register][Polygon-zkEVM Scan]]
   - [[https://arbiscan.io/register][Arbiscan]]
   - [[https://ftmscan.com/register][FTM Scan]]
   - [[https://optimistic.etherscan.io/register][Optimism]]
   - [[https://cronoscan.com/register][Cronoscan]]
   - [[https://bttcscan.com/register][BitTorrent Scan]]
   - [[https://moonbeam.moonscan.io/register][Moonbeam]]
   - [[https://moonriver.moonscan.io/register][Moonriver]]
   - [[https://snowtrace.io/register][Avalanche]]
   - [[https://celoscan.io/register][Celo Scan]]
   - [[https://bobascan.com/register][Boba Scan]]
   - [[https://gnosisscan.io/register][Gnosis Scan]]
4. Create an API key for each of the network.
5. Replace 'YOUR-API-KEY' to your api key.
6. Run ~metamask-bruteforce~ from the terminal. Make sure ~.env~ is in the same
   directory as where you've installed it.
7. If you found a wallet, it will be written in ~found.txt~ with the mnemonic,
   address, balance and which network it came from.
